services:
  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_DB: northwind
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgresql_bin:/usr/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
      - ./db-northdwind/northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
      #- ./db-music/Chinook_PostgreSql.sql:/docker-entrypoint-initdb.d/music.sql
      - ./files:/files
    ports:
      - 5432:5432
    networks:
      - db

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - postgresql_bin:/usr/lib/postgresql
      - pgadmin_root_prefs:/root/.pgadmin
      - pgadmin_working_dir:/var/lib/pgadmin
      - ./files:/files
    ports:
      - 5050:5050
    networks:
      - db

  query-service:
    container_name: intent-to-query
    build:
      context: ./intent-to-query
      dockerfile: Dockerfile
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - 8070:8070
    depends_on:
      - db
    networks:
      - db

  reformulate-intent:
    container_name: reformulate-intent
    build:
      context: ./reformulate-intent
      dockerfile: Dockerfile
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - 8071:8071
    depends_on:
      - db
    networks:
      - db

  query-to-plots:
    container_name: query-to-plots
    build:
      context: ./query-to-plots
      dockerfile: Dockerfile
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - 8072:8072
    depends_on:
      - db
    networks:
      - db

  report-generation:
    container_name: report-generation
    build:
      context: ./api-to-report
      dockerfile: Dockerfile
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - 8073:8073
    depends_on:
      - db
    networks:
      - db

  minio:
    container_name: minio
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    networks:
      - db
  
  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000/ minioadmin minioadmin;
      mc mb -p local/charts || true;
      mc policy set public local/charts;
      mc anonymous set download local/charts;
      "
    networks:
      - db

  main-gateway:
    container_name: main-gateway
    build:
      context: ./main-gateway
      dockerfile: Dockerfile
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - 8074:8074
    depends_on:
      - query-service
      - db
      - reformulate-intent
      - query-to-plots
      - report-generation
      - minio
      - minio-init
    networks:
      - db
  
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - main-gateway
    networks:
    - db

networks:
  db:
    driver: bridge

volumes:
  pgadmin_root_prefs:
    driver: local
  pgadmin_working_dir:
    driver: local
  postgresql_data:
    driver: local
  postgresql_bin:
    driver: local
  minio_data:
    driver: local